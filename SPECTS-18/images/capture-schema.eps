%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 405.000000 107.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G1314) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 405 107
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 405 107
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: FiraSans-Regular
%!FontType1-1.0: FiraSans-Regular 1.0000.4.1060
14 dict begin/FontName /FiraSans-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /S put
dup 34 /one put
dup 35 /I put
dup 36 /two put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -748 1 index div -353 2 index div 1360 3 index div 1104 5 -1 roll div]cvx def
/sfnts [<



B05F2CB20100462B2DB0602CB20101462B2DB0612CB20000422B2DB0622CB20001422B2DB0632CB20100422B2DB0642CB20101422B2DB0652CB03A2B2EB12E01142B2DB0662CB03A2BB03E2B2DB0672CB03A2BB03F2B2DB0682CB00016B03A2BB0402B2DB0692CB03B2B2EB12E01142B2DB06A2CB03B2BB03E2B2DB06B2CB03B2BB03F2B2DB06C2CB03B2BB0402B2DB06D2CB03C2B2EB12E01142B2DB06E2CB03C2BB03E2B2DB06F2CB03C2BB03F2B2DB0702CB03C2BB0402B2DB0712CB03D2B2EB12E01142B2DB0722CB03D2BB03E2B2DB0732CB03D2BB03F2B2DB0742CB03D2BB0402B2DB0752CB3090402034558211B232159422BB00865B003245078B1050115455830592D000004007BFEA2021F041A0003000700250031000D400A2A2610080504020004302B0121112105112111021615140607151406232226353536363534262322070623222635343633121615140623222635343633021FFE5C01A4FE93013769332D320F0A0A0F35261A231D1708050B0D3B220614140F0F14140FFEA2057834FAF00510FDDD4033353A072D0B0D0D0B5403212921240B030D0A1314FEB5140F101515100F1400010064000000C302B1000300134010000101594B0000005A004C1110020A162B33231133C35F5F02B1000000010019FFF401F902BD0029002E402B18170302040200014A000000035B04010303614B000202015B00010162014C000000290028242D25050A172B00161707262623220615141616171E02151406062322273716163332363534262627262635343636330153622E34274B2B364618413E4156353B6F4C8F5B3529563540541A3F3C6A6237633F02BD27293A1F1D32301E292213142E513E3C5C34593B23233F3C222D2412205A4D34522E0001002300000143029D00060031B7040302030001014A4BB0195058400B000101594B0000005A004C1B400B00010100590000005A004C59B41410020A162B2123110727373301435C9C28CF51023B5F4180000000010019000001BD02A700190051400B16150200020B010100024A4BB03150584016000202035B04010303594B00000001590001015A014C1B401404010300020003026300000001590001015A014C59400C000000190018271117050A172B0016161514060607210721353E02353426232206072736363301205B32377274012D0BFE758670303C32293E213E29643E02A73053343D7082744D498B816037343B22273033320000000E002AFF8F04A802F7006E014101550172017B0184018D0194019B01A301A801B101BC01C4003F411E01C401C101B801B301B001AB01A801A401A1019C019A01970191018E018B01860181017D01760173016B0161014D0142013B00A000430004000E00302B12373E0233321716333633321616151406071E021716171616


00>] def
/CharStrings 6 dict dup begin
/.notdef 0 def
/I 1 def
/S 2 def
/one 3 def
/two 4 def
/uniE003 5 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-748 -353 1360 1104}def
/UniqueID 4346234 def
currentdict currentfile eexec

BF46408B47C762FD3823C058353910D9FBDC3062BCB4E02604799B7F064E13F50A0DE75929BF488326C100668C19288A6369440C4C7CB58888E07689E4F0B7C2EB29885A79A41765834D6DA4E767F7F634C65146010D21C121759E183408291EDB82BC67A1FB4A2F52524ABFEA132D428CC37893C4753156C8683B1F3E4155FAE108647CFA1B806B309C18FC2C85585D1C9B08A60D40D190601BC823CFEB793CDC99A024FEE469A13F6B48505C601C3F65DBABCB4FE94FA0792262324CFF8544E8B6367BCA54D2AE2FE9FA358E1654FB276495C813A35918E3B26EE371DED7555A38F20504345919E7B34C4B74C5958F419FFBC0F7260A88DC8F4751036B2843FEE9E7E33A1B2799796BEB9F3772BBF5A07EA1DF6278C6653BE3854FE8ADF1F46811234D75EE8FA50A4CB7988CA8AB601251332388E113433BB3F9BFD9F6459A56265C41FCC6DC22E5A6AA6E96FAF9601AB7915CB06A1325C20451B7E10A86992ABD7C51231AAFCB5FA735A37CDC70C7EC181621F7DC8833CD99973CC6245A52F68125385D695BE6DC4556D033E100E8BEA99C2682FC1CF729C22C37D6080FF6DEDAFFD9DC3CD86407A817964D86386B0A7B27BD863C93165652C9CC34D6C85907E9E3C18E04162A8F1756A29133E6811C17D80BFA19A44849DA2B0D11EBEED54128B000DE0397766FDD36A91D6B784AB30F4ED3E75568AFDDEAEEF69FEE65A9F89226D7736B21A933299E1FA4560F8C0895154CD1A3687C1A8EFB3D8E74ECC8E6C536BC9BA316E99A28586748A5021E4DE6E0A2536E6F68EA01E59944ABB5FA711F8F9687DE1CD605AEA71891C4BD3F81EB3206510B5F0FE6EB8F79CEC28D07976C6EEDB21C45C416DF487FE25789D71BB51838B0E0876D347F28CC1CA36CD2832905B2BC69C535F3D1E752794569557C09C0CD2046D24847381C3AEE2D0153C6A9D5D559BC6A0A42C6083C69E6432F137F1CFF4B78F6636328C020B594AEC6EC76B8C9FD993EC4E40B5C7B845299628316599CC0F6A5373E6674F4223F89ABF45CD595578BBDCAF00C5257426DE499FF216BB7D13B9A532B7D0F33A6871A2187AEB86BB96BF9F89A434D597DA32E9A7A69E6BAA15F894FB485F23F9DD84D64D2E9E69601474BAFFDDD1860C4A5E923F3C1ED2A083D5EFECE6D62619D29CC8854FB9112D242D9598235DF841E39EEDAFEA9E9E43CADA010A1D0A4078F930A767234744E629749281FCE0DEB1E87B0C2F20200EB7386F50E069A7360323177D0E8448DB7E4EB8B21CD456FFBD636DD96A98ED4644570D9D1405204F6A9A8DC310839BAEFC875D5A163A537C6767C068586E7C48D97081A792C91ED07C443A782344E72D754B36CFA60C6A4762630E3DE41E93F560BB653EB74EFBDC85682ED027617788CE13AC7001B035F66D583CFDB98CBDC84A9F69814A99EF95C448E85B6
C976D403347BD37448D09689CACC0E4DAF1C6F310E3FBB7940649F281783A3A3BC29DEA12C61074D392DA7850D0FD4054950677974C658CAA2DD911A5F4B76198CCFBEE79CB2F856235CB599738B11C9D60B88B873E9F75C839492BB63D2BF1A52A08E67B1E064FF4F10585DFB634C1370C36C486C09A027517D5C36A70DDF4B831F8D14CC6F2AF8BB89FE1E6B1F52AD2FA40CB34FB2385B272EAFA198FD471E6D50AD1A737A05A4F44A863964BAAD65A14CA3F9FCAFEA7280C22108D9CB396646C1CF89EF8DD8B1BA1D890B02FCC375F9B07598256DAAFC583F337D18F9CFBE56E1511D956622D9CCE34D2F3320196C866FBE8922DEBBCE3F12888DDB1A248CBDCEEA157B7322B6E33EDC15455D09BF0B7EF43EA71AB547C30FADFB8E6EA68A82B31B91F50392B69C37A7D441415FDCB23678B3668E92905558490FD239BBD141913E8D23716403A086F341275F880A159F0F6013F46B7074A7AC5B0A7110770AF07A24B1F7C515752AE08DC0C54AE6D7AE562FD48DCF903163AEDF3EF8F1CAAC87AC6DEF02548F699EA423C3C7D714B64FEFC25C324838DEDA37373992227C4C461831EB83A60AB61D4EF7A23B64C1E88B58D3B200B7ED810053A1896C06A862D5E7844831775AF3BB1164B2989E2EA3EC2B048537F99E0169A0110CDB8AD94418DBB37868635A044A62FC7E75980ACF51D82E384ECE13A52BF68A76069ECB0E40EBE6EE31484FF34652F42C5C8FA0DE066BFE7B980A2EA4A945CEA8CEAAF7EEE1A7526B23C520AD9F7F72F9954AAAC2E9F0236289580329BB38BD5009EEFCD142F8C7514E0C894DC3715B5A8A3644ACA50BA9F2E2502839B19D06635589759669C97D428D4EC8AA64E5737CD1C9696B1016912A3AE6ECFCAD37B7340D22D232643624A840189A4ECC364358DE4365735233516146676EE7914B68CE7FEE4C2BCFAF92ECC7003F45E07F24F5BCAF42146847F664BC5AE271420F13EDC57F2DEBDB751EA150B7B6DE6ADCB4E6598B2F651B9BEC72F0310EB8F7E8466974A88910AF2128211B1E93AF75EB2AA5A33DBB9984A38CC2CE14EC9768A10E90CFDDE0EFEBCF022803B96886E3705BD0C75AD32B6AD506E2B31FAF837575AD9EA2C9D38F2DB69E3D8531F8B96EE7D95A74A567AE40AFBFD1E565459FD63E280C7D79F54F59846B9B93AA485A6BE53D8CCE6C8D2F0407374440BC15680E6AF1FBBA73071B5A940F7A83E6707A36CE0E85F2E89723F67B10FC544B60664F9D86626ECAFBE58B11A0945FEBEE7CEB8746B0FF492BED4BC90DE9C285FD24AB0D9F52994A50CF7C3E55DC6BF1C1872DE76787A9EE4EB46FC0DD2A66B26920C905D52DE2BE7628FFB0894ED30F9FE857ADE363E89886B5E145FF8EB273912B4D4B0576527C402AEF5010D795EDEA56D91F5CBBE0E17C5A79513C203B637A850C39F2AC1A6AFF
8000A671834F367678D216F8A75CC58C5C11D8527089DC5890CCF02616086CA480BC7A26A6B90271ABE0D147009242BD11B0F7BACE3303F1887B5CD1D79DD301198E9F1AECF5B99F4D37624C505DEC701AC3D1AB8AAC417EA6FA8CE80E979BC385843777459195270FFF8DCF49593BEFC216231AF1D71DC7AEFA9D97ECCD3125F124AC1BCC58925FF3E16CB0FACF6EFDAAC1AEF67920DE54297CC0CA8EC47F7FCF6C5DF29A5DD405424824DDA606829F7A8EC1E8A7E06CB1DA4B8C9BFDA4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/FiraSans-Regular cguidfix
/F1.1/FiraSans-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4294 0.2325 0.0203 0.3278 0.6730 0.1108 0.1933 0.0949 0.9577 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs4 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 405 107 rc
-251 404 m
645 404 l
645 -185 l
-251 -185 l
h
-251 404 m
f
Q
8 w
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
q
0 106.75 m
37.060913 106.75 l
37.060913 30.983801 l
0 30.983801 l
h
0 106.75 m
W
0 30.983801 37.060913 75.766197 rc
0.12648776 0 0 -0.12648781 -17.518555 123.50964 cm
171.66003 604.00037 m
285.29456 662 l
402 604.99982 l
285.29434 545 l
h
171.66003 604.00037 m
S
193 552.88062 m
283.77344 597 l
377 553.64087 l
283.77325 508 l
h
193 552.88062 m
S
210 507.81787 m
285.16977 545.98853 l
362.37097 508.47562 l
285.16962 468.98856 l
h
210 507.81787 m
S
221.62903 474.78653 m
285.45212 508 l
351 475.35886 l
285.452 441 l
h
221.62903 474.78653 m
S
230 440.24228 m
284.76007 468.98853 l
341 440.73761 l
284.75995 411 l
h
230 440.24228 m
S
235 418.19672 m
283.84006 441 l
334 418.58966 l
283.83997 395 l
h
235 418.19672 m
S
243.16 389.50674 m
283.61337 408.83997 l
325.16 389.8399 l
283.61331 369.83997 l
h
243.16 389.50674 m
S
248 370.05615 m
284.01337 385.83997 l
321 370.32812 l
284.01331 354 l
h
248 370.05615 m
S
250 358.05615 m
284.53339 373.83997 l
320 358.32812 l
284.53329 342 l
h
250 358.05615 m
S
254 338.21619 m
283.60004 354.00003 l
314 338.48816 l
283.59998 322.16 l
h
254 338.21619 m
S
259.87097 318.05615 m
283.61465 333.83997 l
308 318.32812 l
283.61459 302 l
h
259.87097 318.05615 m
S
264.12903 302.51767 m
283.79874 313.83997 l
304 302.71277 l
283.79871 291 l
h
264.12903 302.51767 m
S
284 142 m
283 723 l
S
148 654 m
172.6642 592.67279 199.35568 543.65759 222 470 c
244.64432 396.34238 263.25507 297.99817 283.87949 212.01013 c
S
423 654 m
398.09616 591.17297 371.46573 538.99268 348.28101 465.5 c
325.09628 392.00732 305.34338 297.15811 283.87781 212.99976 c
S
Q
0.72000003 w
/Cs1 SC
1 1 1 sc
q
0 0 405 107 rc
1 0 0 -1 -251 404 cm
358.09204 377.6904 m
359.19904 378.3269 359.19904 379.35892 358.09204 379.99545 c
356.98505 380.63196 355.19025 380.63196 354.08325 379.99545 c
352.97626 379.35892 352.97626 378.3269 354.08325 377.6904 c
355.19025 377.05386 356.98505 377.05386 358.09204 377.6904 c
S
0 0 0 sc
361.70859 397.83426 m
358.91064 378.6936 l
358.91064 378.6936 l
358.16574 380.25244 356.29819 380.91226 354.73935 380.16736 c
354.09387 379.85892 353.57361 379.33853 353.26529 378.69299 c
350.46686 397.83606 l
350.46686 397.83606 l
350.05939 399.62112 352.24573 401.25812 355.35016 401.49243 c
358.45459 401.72672 361.30154 400.46954 361.70898 398.68451 c
361.77341 398.40228 361.77325 398.11646 361.70859 397.83426 c
h
361.70859 397.83426 m
S
357.08954 363.00912 m
357.64304 363.56262 357.64304 364.46002 357.08954 365.01352 c
356.53604 365.56705 355.63864 365.56705 355.08511 365.01352 c
354.53162 364.46002 354.53162 363.56262 355.08511 363.00912 c
355.63864 362.45563 356.53604 362.45563 357.08954 363.00912 c
S
356.08801 378.84201 m
356.08801 365.42801 l
S
353.08102 361.00439 m
353.08102 361.00439 l
351.42053 362.66492 351.42053 365.35709 353.08102 367.01761 c
359.09457 367.01761 m
359.09457 367.01761 l
360.75455 365.35687 360.75455 362.66513 359.09457 361.00439 c
351.0766 359 m
351.0766 359 l
348.30914 361.76749 348.30914 366.25449 351.0766 369.022 c
361.09924 369.022 m
361.09924 369.022 l
363.86584 366.25415 363.86584 361.76785 361.09924 359 c
S
1.5 w
356.08792 377.21292 m
356.08792 377.21292 l
354.62436 377.21429 353.40228 377.85504 353.26529 378.69293 c
350.46686 397.83597 l
350.46686 397.83597 l
350.05939 399.62103 352.24573 401.25803 355.35016 401.49231 c
358.45459 401.72659 361.30154 400.46945 361.70898 398.68439 c
361.77341 398.40219 361.77325 398.11636 361.70859 397.8342 c
358.93225 378.84143 l
358.93225 378.84143 l
358.9281 377.94031 357.65512 377.21149 356.08792 377.21292 c
h
356.08792 377.21292 m
356.08792 365.42865 l
357.09012 365.01352 m
357.64362 364.46002 357.64362 363.56259 357.09012 363.00912 c
356.53662 362.45563 355.63922 362.45563 355.08572 363.00912 c
354.53223 363.56259 354.53223 364.46002 355.08572 365.01352 c
355.63922 365.56702 356.53662 365.56702 357.09012 365.01352 c
S
0.72000003 w
1 1 1 sc
536.09204 377.6904 m
537.19904 378.3269 537.19904 379.35892 536.09204 379.99545 c
534.98505 380.63196 533.19025 380.63196 532.08325 379.99545 c
530.97626 379.35892 530.97626 378.3269 532.08325 377.6904 c
533.19025 377.05386 534.98505 377.05386 536.09204 377.6904 c
S
0 0 0 sc
539.70856 397.83426 m
536.91064 378.6936 l
536.91064 378.6936 l
536.16571 380.25244 534.29816 380.91226 532.73932 380.16736 c
532.09387 379.85892 531.57361 379.33853 531.26532 378.69299 c
528.46686 397.83606 l
528.46686 397.83606 l
528.05939 399.62112 530.24573 401.25812 533.35016 401.49243 c
536.45459 401.72672 539.30157 400.46954 539.70898 398.68451 c
539.77338 398.40228 539.77325 398.11646 539.70856 397.83426 c
h
539.70856 397.83426 m
S
/Cs3 SC
15 0 0 42 274 1 cm
BI
/Width 45
/Height 126
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcGTHJcGTHJcGTHJcGTHZiBq%cMtHTrr2oaroj@Jrq??jeGm2]rr2oSrndY9rp'LNrq??ifDiM`rp'L7
rn[S5rosFMrp]pZrr1XO]`7u]rmUl#rnm_9rosFJrp9X]gAehcrmC_lrmq)&rnm_8roO.Arqb@K]`7un
rm(Mjrmq)&rn[S2roF(VgAehcrr2oHrltGhrm^r!rn@AAfDiD]rql]Qrm:YmrnRMGeGllTrr)inrr1=F
JcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTH
JcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTHJcGTH
JcGTHJcGTHJcGTH\c;[.rr)imrqZQjrr1FI_Z0W7rqZQ`n*9o>rq69hh>bIorr)idj6cj4rqPFOcN!n5
r]gC2rpne4rmC^+rgi<RcN!m;qZ-VYh=LX.rZhCBrYk&$cN!lkqZ-U&rmBZtr_r[orW3#km/PB2r`8do
rY,:3l1k8?raGd+qZ?`srm:$3cN!kurW)qDr[.LBra,T6rpoj^rpKcMrXo#-rdk%orW)qtm/PB2rXJi,
ric=UraY^'rW`?`r]U5sp]1:=riH+hr^Qkere9_=dJs4.qZ-WCroF(OriZ5trY=u(rY#3aq!n>urW)q*
m/PK5rk\R6rXJbcq"=XarmC_0rgj&+ros4PqsjZFrW)pYm/PK5rg`rfr\"*.q!@eKq#C-^qsOHdrW)p4
m/PK5rc\8@r_WLPq!@eKq#C-^qsOI3qZ-Wbn,Lf8r_`Xprc.hqq!@eKq#C-^qsOIMrWiE&rlX^0dJs1r
rW)q\qr@J<q"=F^q"=FKr[RmIrh])`eGoOIrX&Q(rj2L^q!@eKq#C-^q!@uVrW)qIn,Lo;ro*_SrmUc)
q!@eKq#C-^q!A!&rW)q$n,Lo;rk&.0rY#"dq!@eKq#C-^q!A!IrW)pTn,Lo;rg*N`r\F9/q!@eKq#C-^
q!A!nrW)p/n,Lo;rc.o;r_rUPq!@eKq#C-^q!A"=qZ-W\o)I5>r_*4jrc._nq!@eKq#C-^q!A"RrX8]*
rl"C-eGoLprW)q[puD/9q"=F^q"=FKrq?=ErW)qio)I>Arqua!rW)r&puD/9q"=F^q"=FKrq?=hrW)qD
o)I>ArnI;Mrm(<!q!@eKq#C-^q!A"NrcS2?r`&IgfDkiYrW)p5rn7),q!@eKq#C-^q!A"Nrg<Zbr\*jB
fDki3rW)pUrn7),q!@eKq#C-^q!A"Nrk/41rX8;sfDkhcrW)ptrn7),q!@eKq#C-^q!A"JrnRANroEbP
fDkh>rW)q?rn7),q!@eKq#C-^q!@nGrX\u.rkJ.+fDkgmrW)q_rn7),q!@eKq#C-^q!@nGr\ONRrgEHZ
gAh0JrW<'!rjDaYpuD/9q"=F^q"=FKqs+/[rW)q>p&EbGrmguJrW3#Irn7),q!@eKq#C-^q!@nCrc\8@
r_N4egAh/VrW)p:qq:c)q!@eKq#C-^q!@nCrgE`cr[IO?gAh/1rW)pYqq:c)q!@eKq#C-^q!@n>rjVk,
rWiH$q#B(Jral'/r`f9QpuD/9q"=F^q"=FKqrRh0qZ-WQq#B(Jr]pG_rd+IppuD/9q"=F^q"=FKpuVJk
rW)r.q#B(JrYth:rgN`;puD/9q"=F^q"=FKpu;97rW)q^q#B1Mrq66krW)r/qq:c)q!@eKq#C-^q!@e8
raGd+rbhN2h>dK$rW)p"rmgo!puD/9q"=F^q"=FKpu;:,rW)phq#B1Mri5qtrZM!hpuD/9q"=F^q"=FK
pu;:NrW)pCq#B1Mre:=Or]g22puD/9q"=F^q"=FKpu;:srW)p#rqcNlh>dI^rW)q(pt>H&q!@eKq#C-^
q!@e8rpKX`rn72Kh>dI8rW)qEpt>H&q!@eKq#C-^q!@e8rpp%-rW)r)qu>LPrY>D4rgNW8puD/9q"=F^
q"=FKpu;;Dr]^;]rf6mUi;`fGqZ-W*pt>H&q!@eKq#C-^q!@e8rpp%srW)q3qu>USrlY3?rW`AIpt>H&
q!@eKq#C-^q!@e8rpB];rW)pbqu>USrh]SorZhEhpt>H&q!@eKq#C-^q!@e8rpB]]rW)p=qu>USrdXnI
r^-V2pt>H&q!@eKq#C-^q!@e8rpB^*rW)p!rqHEli;`d[rW)q*rm:GnpuD/9q"=F^q"=FKpu;;9ro*hX
rW)rHrr:pVr\aZTrdOjnpt>H&q!@eKq#C-^q!@e8qrdr"rW)r#rr:pVrXf&/rgj&8pt>H&q!@eKq#C-^
q!@e8qrdrErW)qSrr;$Yrp'@\rk&0Vpt>H&q!@eKq#C-^q!@S2ra>^*raYs-j8]+trW)p(qp>,kpuD/9
q"=F^q"=FKo&BY"rW)p]rr;$Yrh'/ir[7Tipt>H&q!@eKq#C-^q!@S2rhKGmrYYY7j8]+)rW)peqp>,k
puD/9q"=F^q"=FKpu;2+rkA70rq#1Mr`&jsrakuRpt>H&q!@eKq#C-^q!@e8qqV2(rW`?%rm'R(r\+6N
re(*ppt>H&q!@eKq#C-^q!@e8ptYisrW)qrj8])drW)qkqp>,kpuD/9q"=F^q"=FKpu;)%r_3:kre'A5
roEqVrkSEXpt>H&q!@eKq#C-^q!@e8pt>XdrW)q(k5YFqrW)p-psAfhpuD/9q"=F^q"=FKpu;)%rg*N`
r]''?rgNfdr[dikpt>H&q!@eKq#C-^q!@e8pt>YSrW)p2k5YF&rW)pjpsAfhpuD/9q"=F^q"=FKpu;)%
rn@5Lk5YE\rW)q2psAfhpuD/9q"=F^q"=FKpu;)%rq-0prW)*\r^Hedr`T$Cpt>H&q!@eKq#C-^q!@e8
pt>Z:rXo,0k5YEFrW)p[psAfhpuD/9q"=F^q"=FKpu;)%rpfsurW)*\rd"JCrZM!_pt>H&q!@eKq#C-^
q!@e8pt>Y:rW)p!k5YG#rW)ourf$a$pt>H&q!@eKq#C-^q!@e8qqD%orYPP6r_;GQrd"JCrWW:irm:Gn
puD/9q"=F^q"=FKpu;2)r`f@%rW<)7j8],Xr_WRorX/Y&pt>H&q!@eKq#C-^q!@e8rm1RMrW2uurdb"J
i;`fJr\"0MrX&R5rl+lipuD/9q"=F^q"=FKqrRgKrYkY6rbMN3rr:gSro*i@qZ-U#ra,TIqr@J<q"=F^
q"=ONrosEdr^cndrZ;'Oq#AtGrji"bqZ-U"r^Zs/rh]VCrp9FQq#C6arn7:3r_3;$p]1;*rpoa^dJs3J
r[RI=rY5?"ra,S)r_NM_r]L06rZLk6rX]!.rk._"cN!nBrkJGir`B(EhuNa*rcJ.Srqks[^]4<%rk8;g
rce?nrf$iCrh9=mrjMg^h>`'+qYu-HqYu-HqYu'
~> %APLeod
EI
15 0 0 42 96 1 cm
BI
/Width 45
/Height 126
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
n,NB_rW)p)ro`bMrh]SorWE0!eGoN)rW)pFrqGm]n,NA\rW)q9n,NCNrY,82rcuokrp'ItrW)q?n,MtY
rq?<trW)r6n,NAbrW)pIrqPs^ro!dYrg3W'rq,[Zri5qtrWE/@o)J:\rj;Y)rXo/,o)J]grW)p"rlOa2
rn793o`4srreUROo)J\frW)pHrqZ6eo)J](rW)q"n,NA^rW)q9o)J]irWhcir\siLp&G$UrXAc+rlFd4
o)J\UrW)q]n,NA-rW)r.p&G$QrXe2lrbh<,r]pG_rg*6Wo)J\=rW)r!o)J^TqZ-W]p&G"khuNc#p&G#3
rW)q.p&FU_rXo,0rl+I.rji".rZ1S0rXei)rY,9prl"e?o`4uIp&G#drW)pRp&F^brqQ?jrn[/FreLIQ
r_N4ern[5Irc%koroF(;rXno*r`8^lrmguJrW`Auq#C$erqH9irnm;Hre17Nr_iFhrn@#FrcJ.nrnm_3
rY5,-r_rLirn.2MrWW;rq#BpbrXf&/rl4O/rjMe+rZLn6rr2m+p]1:0rgNi*raGI"re:%Frho_qr\*sE
o)J\;rW)r#o)J^QqZ-W`p&G"chuNbrp&G#6rW)q+p&FU_r^$M`rfusPrYb\8rk8")rndV^joGBjo)J\V
rW)q]p&FU_rau-0ra#!mr_*4jrcdr5rgs)kli@#7rp]U\rpTgrrW)r:p&FU_rilA%rY5A1o)J]^rW)p%
rmLB;rlk?mo`4snrc\;9o)J\qrW)p@rqH*co)J^]rWiE&rl+@+r^Zqfr\FKMo)J^drWDoqrcdi2rj;Y)
rW3#5o)J1Yr^ZqfrcR]0ro3nerW)qNn,N@hp]1;@o)J^XrYth:rbCp%n,NBWrW)p-rp9+RrgNfdrW`B$
o)J[kp]1;@o)J]JrW)p?rq#UYn,NC`rZhCBrcIN,r`f@Srr2KgrWDoqrd=;:rgWm>rk7e#rp9"OrhTMn
rWrMafDkgPp]1;@fDkhlm/R(`r[n*Lr_3=jgAh-Sp]1;@gAh/prWh]frkJF7rW)qDgAh-Sp]1;@h>dK:
rYkb9k5YFBqZ-Voh>dHVp]1;@i;`fOr\sfVrZC2#raGd+rX7Q^rWDoqrd<Z(rf[6\rX/YNj8],Rr_<AD
h>dHVp]1;@i;`eHr[[uKrr9G,rWDoqrd<5q[f?=/p]1;@eGluWrWDoqrd<5q[f?=/p]1;@eGluWrWDoq
rd<5q[f?=/p]1;@eGluWrWDoqrd<5q[f?=/p]1;@eGluWrWDoqrd<5q[f?=/p]1;@eGluWrWDoqrd<5q
[f?=/p]1;@eGluWrWDoqrd<5q[f?=/p]1;@eGluWrWDoqrd<5q[f?=/p]1;@eGluWrWDoqrd<5q[f?=/
p]1;@eGluWrWDoqrd<5q[f?=/p]1;@eGluWrWDoqrd<5q]`7uarjD_,p]1:orlY60gAf.lrpTiNr\<X;
rWiF0rlX1!aT)78rX%9Yr]0u:k5Wa,rr2nCd/a.frnQc<cN!m.b5hMZroNMHdJs4ErZ_"8rY,98reUQ_
r[IgHreCEDrbh]tnc8ZMm/PK5riYnor_!1Jq!e86rW)qgq!e9drXS]'r^,uOdJs2ep]19pro<\Cr\sfV
ri5Y_rbhK2rWN5hn,Lf8r_<.frW3#Gp%JC$rdb";p%JADo`5!3n,Lf8r[@F>rY,:3l1k8?raG?trh8f\
eGoOHrWi2urXer,ra,T6rpoj^rpKcMrXnT!rd=27eGoO(o`4uAraY^'rW`?`r]U5sp]1:=riH)<p]1:p
n,Lo;rj_V$rhobgriZ5trY=u(rY#3aqsjYLp]1:Jn,Lo;rfZpSrlFm-rqucCrfmDQrkna"q"OdXraGR%
rXJ>reGoMbp]19tro*Y=q"=F^q"=XSre'kDroWeOeGoM=p]1:?ro<e?q"=F^q"=XSrhf>grk\1*eGoLl
p]1:aro<e?q"=F^q"=XSrlFa4rg`QZfDkjHrWDoqrb;Alq!@eKq#C-^rp9XHrW2corc[l4fDkj%o`4uJ
ro<e?q"=F^q"=ONrZCn8r_`7dfDkiUo`4ulro<e?q"=F^q"=ONr^-A[r[dX?fDki0o`5!8ro<e?q"=F^
q"=ONrabd(rX&T'p&EYDrb)!+rX&J^q!@eKq#C-^qs=<;o`5!Mp&EYDr^-A[r[[m+q!@eKq#C-^qs=<^
o`5!'p&EYDrZ1b6r_34Lq!@eKq#C-^qs==+o`4uWp&EbGrqHBmp]1;2qr@J<q"=F^q"=ONrosCbp]1;5
p&EbGrmLH>rf?s:q!@eKq#C-^q!@u,p]1:dp&EbGriGbmril:[q!@eKq#C-^q!@uOp]1:?p&EbGreL.H
rmL](q!@eKq#C-^q!@usp]19srquQkgAh.]p]1:&puD/9q"=F^q"=FKrfHdQrnI5JgAh.7p]1:FpuD/9
q"=F^q"=FKril%qrjMV%gAh-gp]1:gpuD/9q"=F^q"=FKrmUN?rfHpTh>dKFo`4u.puD/9q"=F^q"=FK
rpB[jp]1;/q#B1Mrlk$8rf6d6q!@eKq#C-^q!A"Fr[IUBr^Q\_h>dJPo`4unpuD/9q"=F^q"=FKrp'JV
p]1:9q#B1Mrdj_Brlk/tq!@eKq#C-^q!A"FrbhK2rW<)pqu>LPr`o3urY,:apuD/9q"=F^q"=FKroO-=
o`5!Bqu>LPr\sTPr\OQ,puD/9q"=F^q"=FKroO-_o`4uqqu>LPrY"u+r_iaKpuD/9q"=F^q"=FKroO.+
o`4uLqu>USrp9:Xrc8"kpuD/9q"=F^q"=FKqr7S_p]1;)qu>USrl=[3rf[96puD/9q"=F^q"=FKqr7T,
p]1:Yqu>USrh8ubrj)OVpuD/9q"=F^q"=FKqr7TLp]1:4qu>USrd=A=rm:YtpuD/9q"=F^q"=FKqr7Tn
p]19orq69ji;`dWp]1:0qq:c)q!@eKq#C-^q!@n;rfHdQrm:ZEi;`d2p]1:Qqq:c)q!@eKq#C-^q!@n;
rj)1sri?%ui;`ccp]1:pqq:c)q!@eKq#C-^q!@n;rmLH>re:@Oj8],@o`4u8qq:c)q!@eKq#C-^q!@e8
rY"u+ra>a*j8]+po`4uXqq:c)q!@eKq#C-^q!@e8r\jNOr]:&Yj8]+Ko`5!"qq:c)q!@eKq#C-^q!@e8
r`AjprY>G4j8]+%p]19prmUbtpuD/9q"=F^q"=FKpu;9uo`5!\j8]*Up]1:4pt>H&q!@eKq#C-^q!@e8
rgi]^rlX:$r[[aDr]0c,puD/9q"=F^q"=FKpu;:ao`4ufk5YG[rWr9!r`JsKpuD/9q"=F^q"=FKpu;;.
o`4uAk5YG>o`4u8pt>H&q!@eKq#C-^q!@e8roa7rp]1:sk5YFmo`4uVpt>H&q!@eKq#C-^q!@\5r\jNO
r\`j<rg*3Wrj;IRpuD/9q"=F^q"=FKp#>sQp]1:)k5YF#p]19rrlt5kpuD/9q"=F^q"=FKp#>sro`4.S
r_*"drZM3ept>H&q!@eKq#C-^q!@e8rnRL=o`4.Sr[.C?r]^>.pt>H&q!@eKq#C-^q!@e8rnRL]o`47V
rqlZup]1:urm:GnpuD/9q"=F^q"=FKpu;;.rmguKp]0RYrnI)Grd4Xkpt>H&q!@eKq#C-^q!@e8qq:re
p]0RYrjMJ"rgNi5pt>H&q!@eKq#C-^q!@e8qq:s/p]0RYrfHdQrj_sSpt>H&q!@eKq#C-^q!@e8qq:sO
p]0RYrbM9/rWiGKrm:GnpuD/9q"=F^q"=FKpu;2(rd"8=l2U`Pp]1:=qp>,kpuD/9q"=F^q"=FKpu;2(
rgEN]l2U`5p]1:\qp>,kpuD/9q"=F^q"=FKpu;2(rj__'l2U`$p]1:[qp>,kpuD/9q"=F^q"=FKpu;2(
rlY!9l2U_np]1:6qp>,kpuD/9q"=F^q"=FKpu;2(rk/"+l2U`Lp]19orkeZ]pt>H&q!@eKq#C-^q!@e8
qq:s;p]0RYre0qEr\+8jpt>H&q!@eKq#C-^q!@e8rn@@8o`47VroF%eo`4tGrm1JppuD/9q"=F^q"=FK
pu;:IrY+r)k5YF>nc8Y<rg<];puD/9q"=F^q"=FKro3q"r_;q`rZ1/$rql[emf<>5rfR3;ro<e?q"=F^
q"=ONrlk@erX88srWE/=j8],Rr_2YYrYYW1rdOjIrn$r<q#C?droF'Tra5XHli@#)rk&10i;`fPrdt+Z
irK&qr\XU,r[7[crY5>=irK'`rpTaagAh0<rbqc?]E%pEri>_leGoO*r`oF'a8l2crc8#$o)I#8rn%.6
ra>^VrWD'YrWE-`repd.l2SX#rq-3-rf@%_r_EGqrac"Hrd+Qsrf@&WrpAYDJcGTHJcGTHJ,
~> %APLeod
EI
/Cs1 SC
0 0 0 sc
1 0 0 -1 -251 404 cm
535.08954 363.00912 m
535.64307 363.56262 535.64307 364.46002 535.08954 365.01352 c
534.53601 365.56705 533.63861 365.56705 533.08514 365.01352 c
532.53162 364.46002 532.53162 363.56262 533.08514 363.00912 c
533.63861 362.45563 534.53601 362.45563 535.08954 363.00912 c
S
534.08801 378.84201 m
534.08801 365.42801 l
S
531.08099 361.00439 m
531.08099 361.00439 l
529.42053 362.66492 529.42053 365.35709 531.08099 367.01761 c
537.0946 367.01761 m
537.0946 367.01761 l
538.75458 365.35687 538.75458 362.66513 537.0946 361.00439 c
529.0766 359 m
529.0766 359 l
526.30914 361.76749 526.30914 366.25449 529.0766 369.022 c
539.09924 369.022 m
539.09924 369.022 l
541.86584 366.25415 541.86584 361.76785 539.09924 359 c
S
1.5 w
534.08789 377.21292 m
534.08789 377.21292 l
532.62433 377.21429 531.40228 377.85504 531.26532 378.69293 c
528.46686 397.83597 l
528.46686 397.83597 l
528.05939 399.62103 530.24573 401.25803 533.35016 401.49231 c
536.45459 401.72659 539.30157 400.46945 539.70898 398.68439 c
539.77338 398.40219 539.77325 398.11636 539.70856 397.8342 c
536.93225 378.84143 l
536.93225 378.84143 l
536.9281 377.94031 535.65509 377.21149 534.08789 377.21292 c
h
534.08789 377.21292 m
534.08789 365.42865 l
535.09009 365.01352 m
535.64362 364.46002 535.64362 363.56259 535.09009 363.00912 c
534.53662 362.45563 533.63922 362.45563 533.08575 363.00912 c
532.53223 363.56259 532.53223 364.46002 533.08575 365.01352 c
533.63922 365.56702 534.53662 365.56702 535.09009 365.01352 c
S
Q
8 w
/Cs2 SC
0 0 0 sc
q
367 106.75 m
404.06091 106.75 l
404.06091 30.983801 l
367 30.983801 l
h
367 106.75 m
W
367 30.983801 37.060913 75.766197 rc
0.12648776 0 0 -0.12648781 349.48145 123.50964 cm
171.66003 604.00037 m
285.29456 662 l
402 604.99982 l
285.29434 545 l
h
171.66003 604.00037 m
S
193 552.88062 m
283.77344 597 l
377 553.64087 l
283.77325 508 l
h
193 552.88062 m
S
210 507.81787 m
285.16977 545.98853 l
362.37097 508.47562 l
285.16962 468.98856 l
h
210 507.81787 m
S
221.62903 474.78653 m
285.45212 508 l
351 475.35886 l
285.452 441 l
h
221.62903 474.78653 m
S
230 440.24228 m
284.76007 468.98853 l
341 440.73761 l
284.75995 411 l
h
230 440.24228 m
S
235 418.19672 m
283.84006 441 l
334 418.58966 l
283.83997 395 l
h
235 418.19672 m
S
243.16 389.50674 m
283.61337 408.83997 l
325.16 389.8399 l
283.61331 369.83997 l
h
243.16 389.50674 m
S
248 370.05615 m
284.01337 385.83997 l
321 370.32812 l
284.01331 354 l
h
248 370.05615 m
S
250 358.05615 m
284.53339 373.83997 l
320 358.32812 l
284.53329 342 l
h
250 358.05615 m
S
254 338.21619 m
283.60004 354.00003 l
314 338.48816 l
283.59998 322.16 l
h
254 338.21619 m
S
259.87097 318.05615 m
283.61465 333.83997 l
308 318.32812 l
283.61459 302 l
h
259.87097 318.05615 m
S
264.12903 302.51767 m
283.79874 313.83997 l
304 302.71277 l
283.79871 291 l
h
264.12903 302.51767 m
S
284 142 m
283 723 l
S
148 654 m
172.6642 592.67279 199.35568 543.65759 222 470 c
244.64432 396.34238 263.25507 297.99817 283.87949 212.01013 c
S
423 654 m
398.09616 591.17297 371.46573 538.99268 348.28101 465.5 c
325.09628 392.00732 305.34338 297.15811 283.87781 212.99976 c
S
Q
1 w
/Cs1 SC
0 0 0 sc
q
0 0 405 107 rc
1 0 0 -1 -251 404 cm
356.08801 365.42801 m
297.40512 344.88916 l
S
0 i
CM
38.854248 61.753632 m
45.414074 56.279266 l
47.396164 61.942421 l
h
38.854248 61.753632 m
f
0 J
0 j
1 0 0 -1 -251 404 cm
289.85425 342.24637 m
296.41406 347.72073 l
298.39618 342.05759 l
h
289.85425 342.24637 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
356.08801 365.42801 m
608.15729 338.19812 l
S
0 i
CM
365.11099 66.661079 m
356.83505 68.784523 l
357.47946 62.819229 l
h
365.11099 66.661079 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -251 404 cm
616.11096 337.33893 m
607.83508 335.21548 l
608.47949 341.18079 l
h
616.11096 337.33893 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
529.8606 363.54959 m
297.90247 338.23007 l
S
0 i
CM
38.949696 66.638023 m
46.576923 62.787651 l
47.227989 68.75222 l
h
38.949696 66.638023 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -251 404 cm
289.94971 337.36197 m
297.57693 341.21234 l
298.228 335.24777 l
h
289.94971 337.36197 m
S
1 J
1 j
0.60000002 i
534.08801 365.42801 m
608.50641 343.42053 l
S
0 i
CM
365.17801 62.848148 m
356.65567 63.456306 l
358.35718 57.702625 l
h
365.17801 62.848148 m
f
0 J
0 j
1 0 0 -1 -251 404 cm
616.17798 341.15186 m
607.65564 340.5437 l
609.35718 346.29736 l
h
616.17798 341.15186 m
S
/Cs4 SC
0 sc
1 0 0 -1 64 35 cm
/F1.1[ 16 0 0 -16 0 0]sf
-7.664 5.5 m
(!")[ 8.400000 0.000000 ] xS
1 0 0 -1 83 77 cm
-5.8239999 5.5 m
(#")[ 4.720000 0.000000 ] xS
1 0 0 -1 306.5 77 cm
-6.3200002 5.5 m
(#$)[ 4.720000 0.000000 ] xS
1 0 0 -1 338.5 35 cm
-8.3199997 5.5 m
(!$)[ 8.720000 0.000000 ] xS
ep
end
